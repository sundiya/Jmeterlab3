spring:
  shardingsphere:
    dataSources:
     db1: !!org.apache.commons.dbcp.BasicDataSource
      driverClassName: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/db_student1
      username: root
      password: 123456
    db2: !!org.apache.commons.dbcp.BasicDataSource
      driverClassName: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/db_student2
      username: root
      password: 123456
    db3: !!org.apache.commons.dbcp.BasicDataSource
      driverClassName: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/db_student3
      username: root
      password: 123456
    shardingRule:
      tables:
        student:
        actualDataNodes: db_student${0..2}.student_${'A'..'Z'}  # 实际数据节点：三个数据库中的26个表
        databaseStrategy:
          inline:
            shardingColumn: name  # 分库的字段
            algorithmExpression: db_student${(name.charAt(0) - 'A') % 3}  # 计算出使用哪个数据库
        tableStrategy:
          inline:
            shardingColumn: name  # 分表的字段
            algorithmExpression: student_${name.charAt(0).toUpperCase()}  # 根据首字母创建表名